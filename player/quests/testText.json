{"init":"//!bs:ql.param(var(test), var(0))\ntest = 0;AddToVars('test');\n//!bs:ql.cons(var(test), val(0), val(1))\nAddConstraint('test', 0, 1);\n//!bs:end\n//!bs:ql.show(var(test), [ran(val(0),val(1))], ['test: test&comm; test+100:{test+100} {crange&lb;1&comm; 200&rb;}'], 1 )\nAddShowRanges('test', [range(0, 1)], ['test: test, test+100:{test+100} {crange(1, 200)}'], 1);\n//!bs:end\n//!bs:ql.icons(var(test))\nAddIntConstraint('test');\n//!bs:end\n//!bs:end\n//!bs:ql.param(var(Ranger), val('<Ranger>'))\nRanger = '<Ranger>';AddToVars('Ranger');\n//!bs:end\n//!bs:ql.param(var(FromStar), val('<FromStar>'))\nFromStar = '<FromStar>';AddToVars('FromStar');\n//!bs:end\n//!bs:ql.param(var(FromPlanet), val('<FromPlanet>'))\nFromPlanet = '<FromPlanet>';AddToVars('FromPlanet');\n//!bs:end\n//!bs:ql.param(var(ToPlanet), val('<ToPlanet>'))\nToPlanet = '<ToPlanet>';AddToVars('ToPlanet');\n//!bs:end\n//!bs:ql.param(var(ToStar), val('<ToStar>'))\nToStar = '<ToStar>';AddToVars('ToStar');\n//!bs:end",
 "actions":"",
 "name":"[Not inplemented yet]",
 "description":"Описание задания",
 "libraries":["main.as"],
 "vers":[
  {"id":"L1",
   "actions":"",
   "init":"",
   "text":"Hi! (test + 20) * [1..10]:  {test+20*crange(1, 10)}, {test+5}",
   "type":"start",
   "edges":[
   {"id":"P2",
  "actions":"",
  "init":"//!bs:ql.prior('P2', 1)\nSetPathPriority( 'P2', 1 );\n//!bs:end\n//!bs:ql.showord('P2', 5)\nSetPathShowOrder( 'P2', 5 );\n//!bs:end\n//!bs:ql.pass('P2', 1)\nSetPathPassability( 'P2', 1 );\n//!bs:end",
  "text":"doind {crange(1, 100)}",
  "conditions":"/*!bs:null:!bs*/\n",
  "question":"Hi! (test + 20) * [1..10]:  {test+20*crange(1, 10)} -> End",
  "nextVer":"L2"}],
   "x":"360",
   "y":"180"},
  {"id":"L2",
   "actions":"",
   "init":"",
   "text":"End",
   "type":"odinary",
   "edges":[
   ],
   "x":"520",
   "y":"252"}]}